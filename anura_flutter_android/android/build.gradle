plugins {
    id "com.android.library"
    id "kotlin-android"
}

group 'com.example.verygoodcore'
version '1.0-SNAPSHOT'

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        flatDir {
            dirs project(':anura_flutter_android').file('libs')
        }
    }
}

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.example.verygoodcore'
    }

    compileSdk 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdkVersion 25

          def DFX_REST_URL = ""
        def DFX_WS_URL = ""
        def DFX_LICENSE_KEY = ""
        def DFX_STUDY_ID = ""

        if (file('server.properties').exists()) {
            Properties properties = new Properties()
            properties.load(file('server.properties').newDataInputStream())

            DFX_REST_URL = properties.getProperty("DFX_REST_URL")
            DFX_WS_URL = properties.getProperty("DFX_WS_URL")
            DFX_LICENSE_KEY = properties.getProperty("DFX_LICENSE_KEY")
            DFX_STUDY_ID = properties.getProperty("DFX_STUDY_ID")
        }

        buildConfigField 'String', 'DFX_REST_URL', "\"${DFX_REST_URL}\""
        buildConfigField 'String', 'DFX_WS_URL', "\"${DFX_WS_URL}\""
        buildConfigField 'String', 'DFX_LICENSE_KEY', "\"${DFX_LICENSE_KEY}\""
        buildConfigField 'String', 'DFX_STUDY_ID', "\"${DFX_STUDY_ID}\""

    }

        buildFeatures {
        viewBinding true
        buildConfig true
    }

      

    dependencies {
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.mockito:mockito-core:5.0.0'

        // Anura Core SDK
        api (name: 'anura-core-sdk-2.4.8.304', ext: 'aar')
        api (name: 'anura-opencv-4.5.1', ext: 'aar')
        api (name: 'dfxextras-0.1.8', ext: 'aar')
        api (name: 'dfxsdk-4.13.4', ext: 'aar')
        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

        // Anura Core SDK Dependencies
        implementation "com.google.mediapipe:solution-core:0.10.15"
        implementation "com.google.mediapipe:facemesh:0.10.15"
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.1.0"
        implementation "com.google.code.gson:gson:2.9.0"
        implementation "org.java-websocket:Java-WebSocket:1.4.1"

        // Anura Sample App Dependencies
        implementation "androidx.constraintlayout:constraintlayout:2.1.4"
        implementation "androidx.appcompat:appcompat:1.6.1"
        implementation "com.google.android.material:material:1.9.0"
        implementation "androidx.activity:activity-ktx:1.7.2"
        implementation "androidx.fragment:fragment-ktx:1.6.0"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
        implementation "androidx.recyclerview:recyclerview:1.3.0"

    }


    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}